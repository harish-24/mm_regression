#!1 THP_TYPE: base shared_thp double_mapping pmd_split thp_split

. $TRDIR/lib/setup_thp_migration.sh

MAPTYPE=mmap_numa:preferred_cpu_node=0:preferred_mem_node=0
FORK=
SPLIT_THP=
HUGEPAGE_CHECKCODE=HUGEPAGE_MIGRATED
ACTION=mbind:flags=move_all
HUGEANON="-B hugetlb_anon"
HUGETLB=50
#ACTION=mbind:flags=move_all

#if __MARK_THP_TYPE == __MARK_THP_TYPE_shared_thp
FORK=fork:wait_after
HUGEPAGE_CHECKCODE=HUGEPAGE_MIGRATED
#elif __MARK_THP_TYPE == __MARK_THP_TYPE_double_mapping
FORK=fork:wait_after
SPLIT_THP=split_thp:only_pmd
HUGEPAGE_CHECKCODE=HUGEPAGE_MIGRATED
#elif __MARK_THP_TYPE == __MARK_THP_TYPE_pmd_split
SPLIT_THP=split_thp:only_pmd
HUGEPAGE_CHECKCODE=HUGEPAGE_MIGRATED
#elif __MARK_THP_TYPE == __MARK_THP_TYPE_thp_split
SPLIT_THP=split_thp
HUGETLB=0
HUGEANON=""
HUGEPAGE_CHECKCODE=HUGEPAGE_NOT_EXIST
#endif

TEST_PROGRAM="lib/test_alloc_generic $HUGEANON -B thp -N 1 -L '$MAPTYPE access:wait_after $FORK $SPLIT_THP noop:wait_after $ACTION munmap:wait_before exit:wait_before'"
EXPECTED_RETURN_CODE="START MIGRATION_PASSED $HUGEPAGE_CHECKCODE EXIT"

_prepare() {
    prepare_hugepage_migration || return 1
}
